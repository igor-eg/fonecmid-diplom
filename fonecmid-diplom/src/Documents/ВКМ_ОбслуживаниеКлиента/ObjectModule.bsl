
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка КАК Ссылка,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК КоличествоЧасов
		|ПОМЕСТИТЬ ВТ_Работы
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Клиент КАК Клиент,
		|	ВКМ_ОбслуживаниеКлиента.Договор КАК Договор,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Сотрудник,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		|	ЕСТЬNULL(ВТ_Работы.КоличествоЧасов, 0) КАК КоличествоЧасов,
		|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора КАК ВКМ_ДатаНачалаДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора КАК ВКМ_ДатаОкончанияДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК ВКМ_СтоимостьЧасаРаботы,
		|	ЕСТЬNULL(ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы, 0) * ЕСТЬNULL(ВТ_Работы.КоличествоЧасов, 0) КАК СуммаКОплате,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, -1) КАК ПроцентОтРабот,
		|	ВКМ_ОбслуживаниеКлиента.Дата КАК Период
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО ВКМ_ОбслуживаниеКлиента.Договор = ДоговорыКонтрагентов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Работы КАК ВТ_Работы
		|		ПО ВКМ_ОбслуживаниеКлиента.Ссылка = ВТ_Работы.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК
		|			ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("Период", Дата);
		
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ВведенныеДанныеКорректны(Выборка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, Выборка);
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Если Выборка.ПроцентОтРабот = -1 Тогда
		ОбщегоНазначения.СообщитьПользователю("Проведение документа невозможно: на дату документа специалисту не установлен процент оплаты от работ"); 
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, Выборка);
	Движение.СуммаКОплате = Выборка.СуммаКОплате * Выборка.ПроцентОтРабот / 100;
	Движение.ЧасовКОплате = Выборка.КоличествоЧасов;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда	
		Возврат;
	КонецЕсли;
	
	ДокументИзменен = Ложь;
	ДанныеОбслуживания = СтруктураДанныхОбслуживания();	

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Специалист,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот,
		|	ПРЕДСТАВЛЕНИЕ(ВКМ_ОбслуживаниеКлиента.Специалист) КАК СпециалистСтрока,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);		
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
		
	Если Не Выборка.Следующий() Тогда
		ДанныеОбслуживания.Создан = Истина;
		ДокументИзменен = Истина;
	Иначе
		Если Выборка.Специалист <> Специалист Тогда
			ДанныеОбслуживания.Специалист = СтрШаблон("%1 (изменен с %2)", ДанныеОбслуживания.Специалист, Выборка.СпециалистСтрока);			
			ДокументИзменен = Истина;
		КонецЕсли;
		
		Если Выборка.ДатаПроведенияРабот <> ДатаПроведенияРабот Тогда
			ДанныеОбслуживания.ДатаПроведенияРабот = СтрШаблон("%1 (изменена с %2)", ДанныеОбслуживания.ДатаПроведенияРабот, Формат(Выборка.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"));			
			ДокументИзменен = Истина;
		КонецЕсли;
		
		Если Выборка.ВремяНачалаРабот <> ВремяНачалаРабот Тогда
			ДанныеОбслуживания.ВремяНачалаРабот = СтрШаблон("%1 (изменено с %2)", ДанныеОбслуживания.ВремяНачалаРабот, Формат(Выборка.ВремяНачалаРабот, "ДФ=HH:mm;"));			
			ДокументИзменен = Истина;
		КонецЕсли;

		Если Выборка.ВремяОкончанияРабот <> ВремяОкончанияРабот Тогда
			ДанныеОбслуживания.ВремяОкончанияРабот = СтрШаблон("%1 (изменено с %2)", ДанныеОбслуживания.ВремяОкончанияРабот, Формат(Выборка.ВремяОкончанияРабот, "ДФ=HH:mm;"));			
			ДокументИзменен = Истина;
		КонецЕсли;
	КонецЕсли;
		
	Если ДокументИзменен Тогда
		ТекстСообщения = СгенерироватьТекстОДокументе(ДанныеОбслуживания);
		СоздатьУведомлениеТелеграмБоту(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ВведенныеДанныеКорректны(Выборка)
	
	ДанныеКорректны = Истина;

	Если Выборка.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание") Тогда
		ДанныеКорректны = Ложь;
		ОбщегоНазначения.СообщитьПользователю("Проведение документа невозможно: Выбран неподходящий тип договора.",,"Договор","Объект");
		Возврат ДанныеКорректны;
	КонецЕсли;
	
	Если Дата < Выборка.ВКМ_ДатаНачалаДействияДоговора Или Дата > Выборка.ВКМ_ДатаОкончанияДействияДоговора Тогда
		ДанныеКорректны = Ложь;
		ОбщегоНазначения.СообщитьПользователю("Проведение документа невозможно: Дата документа за пределами периода действия договора.",,"Дата","Объект");
	КонецЕсли;
		
	Если ДатаПроведенияРабот < Выборка.ВКМ_ДатаНачалаДействияДоговора Или ДатаПроведенияРабот > Выборка.ВКМ_ДатаОкончанияДействияДоговора Тогда
		ОбщегоНазначения.СообщитьПользователю("Предупреждение: Дата проведения работ за пределами периода действия договора.",,"ДатаПроведенияРабот","Объект");
	КонецЕсли;	
	
	Возврат ДанныеКорректны;
КонецФункции

	
// Создание элемента справочника ВКМ_УведомленияТелеграмБоту
// 
// Параметры:
//  ТекстСообщения - Строка - текст, помещаемый в реквизит ТекстСообщения справочника
Процедура СоздатьУведомлениеТелеграмБоту(ТекстСообщения)
	Уведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	Уведомление.ТекстСообщения = ТекстСообщения;
	Уведомление.Записать();	
КонецПроцедуры	

Функция СтруктураДанныхОбслуживания()
	ДанныеОбслуживания = Новый Структура;
	ДанныеОбслуживания.Вставить("Специалист", Строка(Специалист));
	ДанныеОбслуживания.Вставить("ДатаПроведенияРабот", Формат(ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"));
	ДанныеОбслуживания.Вставить("ВремяНачалаРабот", Формат(ВремяНачалаРабот, "ДФ=HH:mm;"));
	ДанныеОбслуживания.Вставить("ВремяОкончанияРабот", Формат(ВремяОкончанияРабот, "ДФ=HH:mm;"));
	ДанныеОбслуживания.Вставить("Создан", Ложь);
	Возврат ДанныеОбслуживания
КонецФункции

Функция СгенерироватьТекстОДокументе(ДанныеОбслуживания)
	
	Если ДанныеОбслуживания.Создан Тогда
		Статус = "Создан новый"
	Иначе 
		Статус = "Изменен";
	КонецЕсли;
	
	ТекстСообщения = СтрШаблон("
	|%1 документ на обслуживание №%2 от %3
	|Специалист: %4
	|Клиент: %5
	|Договор: %6
	|Дата проведения работ: %7
	|Время проведения работ: %8 - %9
	|Описание проблемы: %10
	|", Статус, ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Номер), 
		Дата, ДанныеОбслуживания.Специалист, Клиент, Договор,
		ДанныеОбслуживания.ДатаПроведенияРабот, ДанныеОбслуживания.ВремяНачалаРабот,
		ДанныеОбслуживания.ВремяОкончанияРабот, ОписаниеПроблемы);
	
	Возврат ТекстСообщения;
	
КонецФункции
#КонецОбласти
#КонецЕсли
